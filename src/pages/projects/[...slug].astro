---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import Icon from "../../components/Icon.astro";
import Pill from "../../components/Pill.astro";

interface Props {
  entry: CollectionEntry<"projects">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("projects");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div class="flex flex-col gap-20 p-4 pb-24 max-w-4xl mx-auto">
    <div class="gap-15 flex flex-col">
      <header class="border-b-1 border-gray-800 pb-10">
        <div class="m-auto flex w-full max-w-[83rem] flex-col gap-2">
          <a class="flex-none" href="/projects/"
            ><Icon icon="arrow-left" /> Projects</a
          >
          <div class="flex flex-col gap-2">
            <h1 class="text-5xl font-bold text-gray-800">{entry.data.title}</h1>
            <p class="text-lg">{entry.data.description}</p>
            <div
              class="flex flex-col items-center justify-between gap-6 py-2 md:flex-row"
            >
              <div class="flex gap-2 flex-row">
                {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
              </div>
            </div>
          </div>
        </div>
      </header>
      <main class="m-auto w-full max-w-[83rem]">
        <div class="content flex flex-col gap-10">
          <div class="content">
            <Content />
          </div>
        </div>
      </main>
    </div>
  </div>
</BaseLayout>

<style>
  .content {
    max-width: 80ch;
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {
    border-radius: 1.5rem;
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--gray-0);
  }

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }
</style>
